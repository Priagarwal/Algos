import java.util.Stack;


public class Graph {
	int nVertices;
	int edgeCount;
	boolean adjMat[][];
	Vertex vertices[];
	
	public Graph(int n) {
		this.nVertices = n;
		this.adjMat = new boolean[n][n];
		this.edgeCount = 0;
		vertices = new Vertex[n];
		for (int i = 0; i < n; i++) {
			vertices[i] = new Vertex(i);
		}
	}
	
	public void addEdge(int u, int v) {
		if (u >= 0 && u < this.nVertices && v >= 0 && v < this.nVertices) {
			adjMat[u][v] = true;
			adjMat[v][u] = true;
		}
	}
	
	public void dfs() {
		Stack<Vertex> s = new Stack<Vertex>(); 
		Vertex current = 0;
		s.push(vertices[0]);
		while (!s.isEmpty()) {
			current = s.pop();
			
		}		
	}
	
	public void getAdjUnvisited(int i){
		
	}
	
	public boolean isEdge(int u, int v) {
		if (u >= 0 && u < this.nVertices && v >= 0 && v < this.nVertices) {
			return adjMat[u][v];
		}
		return false;
	}
	
	
	
	public static void main(String args[]) {
		System.out.println("Hi");
	}
}
