import java.util.ArrayList;
import java.util.HashMap;


public class Finder {
	HashMap<String,ArrayList<Integer>> words;
	
	
	
	
	public Finder(String w[]) {
		words = new HashMap<String,ArrayList<Integer>>();
		String word;
		for (int i = 0; i < w.length; i++) {
			ArrayList<Integer> l = new ArrayList<Integer>();
			if (!words.containsKey(w[i])) {
				l.add(i);
				words.put(w[i], l);
			} else {
				l = words.get(w[i]);
				l.add(i);				
			}
		}
	}
	
	public int distance(String a, String b) {
		ArrayList<Integer> indices_a = words.get(a);
		ArrayList<Integer> indices_b = words.get(b);
		int dist = -1, j= 0, k = 0;
		for (int i = 0; i < indices_a.size(); i++) {
			if (words[i].equals(a))  {
				indices_a[j++] = i;
			}
			if (words[i].equals(b)) {
				indices_b[k++] = i;
			}				
		}
		int min_dist = Math.abs(indices_a.get(0) - indices_b.get(0));
		if (j != 0 && k != 0) {
			for (int l = 0; l < j ; l++) {
				for (int m = 0; m < k; m++) {
					dist = Math.abs(indices_a[l] - indices_b[m]);
					if (dist < min_dist) {
						min_dist = dist;
					}
				}
			}
		}
		return min_dist;
	}
	
	public void printWords(){
		//for (int i = 0; i < words.size(); i++) {
			System.out.println(words);
		//}
	}
	
	public static void main(String[] args) {
		String w[] = new String[] {"the", "quick", "brown", "fox", "quick"};
		Finder myFinder = new Finder(w);
		//finder.printWords();
		myFinder.printWords();
	}

}
