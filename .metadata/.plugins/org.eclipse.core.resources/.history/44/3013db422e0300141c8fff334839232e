
public class Node {
	private int data;
	private Node lchild;
	private Node rchild;
	
	public Node(int d) {
		this.data = d;
		this.lchild = null;
		this.rchild = null;
	}
	
	public int getData() {
		return this.data;
	}
	
	public void setData(int d) {
		this.data = d;
	}
	
	public Node getLchild() {
		return this.lchild;
	}
	
	public void setLchild(Node l) {
		this.lchild = l;
	}
	
	public Node getRchild() {
		return this.rchild;
	}
	
	public boolean isChildless() {
		if ((lchild == null) && (rchild == null))
			return true;
		return false;
	}
	
	public boolean isParentOf(Node c) {
		if (lchild.getData() == c.data || rchild.getData() == c.data) {
			return true;
		}
		return false;
	}
	
	public boolean isInorderSuccessorOf(Node c) {
		if (this.lchild != null) {
			Node root = this.lchild;
			while (root.getRchild() != null) {
				root = root.getRchild();
			}
			if (root.data == c.data)
				return true;
		}
		return false;
	}
	public void setRchild(Node r) {
		this.rchild = r;
	}
	
}
